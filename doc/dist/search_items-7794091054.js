searchNodes=[{"ref":"AirVantage.html","title":"AirVantage","type":"module","doc":"A simple HTTP client to communicate with AirVantage API."},{"ref":"AirVantage.html#start/2","title":"AirVantage.start/2","type":"function","doc":"Callback for the application. It Starts the supervision tree."},{"ref":"AirVantage.API.html","title":"AirVantage.API","type":"module","doc":"Utilities for interacting with the AirVantage API."},{"ref":"AirVantage.API.html#request/5","title":"AirVantage.API.request/5","type":"function","doc":"A low level function which performs any request to AirVantage API. This function could actually be used in order to make request to unsupported endpoints."},{"ref":"AirVantage.API.html#t:body/0","title":"AirVantage.API.body/0","type":"type","doc":""},{"ref":"AirVantage.API.html#t:endpoint/0","title":"AirVantage.API.endpoint/0","type":"type","doc":""},{"ref":"AirVantage.API.html#t:headers/0","title":"AirVantage.API.headers/0","type":"type","doc":""},{"ref":"AirVantage.API.html#t:method/0","title":"AirVantage.API.method/0","type":"type","doc":""},{"ref":"AirVantage.API.html#t:params/0","title":"AirVantage.API.params/0","type":"type","doc":""},{"ref":"AirVantage.Request.html","title":"AirVantage.Request","type":"module","doc":"A module to build and execute requests to AirVantage API. The request does not happen until its passed to make_request/1. At a minimum, a request must have the endpoint and method specified to be valid."},{"ref":"AirVantage.Request.html#make_request/1","title":"AirVantage.Request.make_request/1","type":"function","doc":"Executes the request and returns the response."},{"ref":"AirVantage.Request.html#new_request/1","title":"AirVantage.Request.new_request/1","type":"function","doc":"Creates a new request."},{"ref":"AirVantage.Request.html#put_endpoint/2","title":"AirVantage.Request.put_endpoint/2","type":"function","doc":"Specifies an endpoint for the request."},{"ref":"AirVantage.Request.html#put_method/2","title":"AirVantage.Request.put_method/2","type":"function","doc":"Specifies a method to use for the request. Accepts any of the standard HTTP methods as atoms, that is :get, :post, :put or :delete."},{"ref":"AirVantage.Request.html#put_param/3","title":"AirVantage.Request.put_param/3","type":"function","doc":"Specify a single param to be included in the request."},{"ref":"AirVantage.Request.html#put_params/2","title":"AirVantage.Request.put_params/2","type":"function","doc":"Specifies the parameters to be used for the request. If the request is a :post request, these are encoded in the request body. Otherwise, they are encoded in the URL. Calling this function multiple times will merge, not replace, the params currently specified."},{"ref":"AirVantage.Request.html#t:t/0","title":"AirVantage.Request.t/0","type":"type","doc":""},{"ref":"AirVantage.Operations.System.html","title":"AirVantage.Operations.System","type":"module","doc":"The system is the core representation used in AirVantage to define and interact with a real system. A system is composed of: a gateway: the physical module enabling the connectivity of the system a subscription: a subscription is the configuration of the connectivity defined with the operator one or several applications: an application defines a piece of logic executing on the system. It can be a firmware, a software, etc."},{"ref":"AirVantage.Operations.System.html#find/2","title":"AirVantage.Operations.System.find/2","type":"function","doc":"Returns a paginated list of systems with their complete details. It is possible to filter out the result list using criteria parameters. Though system creation date is not publicly exposed, the default sort order is based on the creation date."},{"ref":"AirVantage.Operations.SystemCommunication.html","title":"AirVantage.Operations.SystemCommunication","type":"module","doc":"Communication related operations."},{"ref":"AirVantage.Operations.SystemCommunication.html#send_sms/2","title":"AirVantage.Operations.SystemCommunication.send_sms/2","type":"function","doc":"Sends a text SMS to a selection of systems."},{"ref":"AirVantage.Operations.SystemDeviceManagement.html","title":"AirVantage.Operations.SystemDeviceManagement","type":"module","doc":"Device managament related operations"},{"ref":"AirVantage.Operations.SystemDeviceManagement.html#wake_up/1","title":"AirVantage.Operations.SystemDeviceManagement.wake_up/1","type":"function","doc":"Wakes up a communication application deployed on a selection of systems in order to force this application to communicate with the Operating Portal."},{"ref":"readme.html","title":"ExVantage","type":"extras","doc":"ExVantage An Elixir library to work with AirVantage API."},{"ref":"readme.html#installation","title":"ExVantage - Installation","type":"extras","doc":"By adding the version of this dependency to your mix.exs: {:ex_vantage, &quot;~&gt; 0.0.1&quot;} Or using git: {:ex_vantage, git: &quot;https://github.com/pvp-technologies/ex_vantage&quot;} If your using elixir &lt; 1.4 you might need to add it to your application: defp application do [applications: [:ex_vantage]] end"},{"ref":"readme.html#configuration","title":"ExVantage - Configuration","type":"extras","doc":"To make API calls, it is necessary to configure your AirVantage account by adding few configurations: config :ex_vantage, api_base_url: &quot;https://eu.airvantage.net/api&quot;, client_id: &quot;12345678a567abc70de2551d18feed&quot;, client_secret: &quot;182n263b368f44a419149bf8db7f2a6aa&quot;, username: &quot;your.email@exvantage.com&quot;, password: &quot;yourSecureP@ssword!&quot; Contributing Feedback, feature requests, and fixes are welcomed and encouraged. Please make appropriate use of Issues and Pull Requests. All code should have accompanying tests. License Please see LICENSE for licensing details."}]